.wrapper
  // ko if:model().data_validation()
  p You have imported a validation dataset. This should be the final step in the fitting process, and no further changes should be made to add or remove terms in the current model based on the goodness-of-fit results with the validation data (although coefficients may be updated).
  // /ko
  header
    span.title Candidate Terms
  tf-pager(params="source:source,result:result,current:current_page")
  .candidate-wrapper
    table.candidates(data-bind="if:candidates().length")
      thead
        tr
          th
            div.centering
              div.fixing Term
          // ko foreach:allstats
          // ko if:!global && sort && selected()
          th
            div.centering
              div.fixing(data-bind="click:function(){$parent.sortby($data)}")
                span(data-bind="text:name")
                // ko if: sorting
                i.fa.fa-sort
                // /ko
          // /ko
          // /ko

      tbody
        tr.candidate.current
          td.term
            span.coeff Current Model
          // ko foreach:allstats
          // ko if:!global && sort && selected()
          td.stat
            // ko ifnot:isNaN($parent.getStat(id))
            span.value(data-bind="num: $parent.getStat(id), fmt: format")
            // /ko
          // /ko
          // /ko
        // ko foreach:result
        tr.candidate(data-bind="click:function(){selected(true);$parent.current_page(0);},css:{selected:selected}")
          td.term
            span.coeff
              span(data-bind="num:coeff")
            // ko foreach:term
            // ko if:exp !== 0
            span.name
              span(data-bind="text:name||'x'")

              // ko ifnot:name
              sub
                span(data-bind="text:index")
                span &nbsp;
              // /ko
              // ko if:$parents[1].timeseries()
              sub
                span lag
                span(data-bind="text:lag || 0")
              // /ko
            // ko if:exp !== 1
            sup(data-bind="text:exp")
            // /ko
            // /ko
            // /ko
          // ko foreach:allstats
          // ko if:!global && sort && selected()
          td.stat(data-bind="css: { \
            green: (id == 'pt' && $parent.stats[id] <= $parents[1].psig()) \
                  || ((id == 'pF' || id == 'F') && $parent.stats.F > model().cross_or_fit().stats.F) \
                  || ((id == 'SSE') && $parent.stats.SSE < model().cross_or_fit().stats.SSE) \
                  || ((id == 'MSE') && $parent.stats.MSE < model().cross_or_fit().stats.MSE) \
                  || ((id == 't') && $parent.stats.t > model().cross_or_fit().stats.t) \
                  || ((id == 'adjRsq') && $parent.stats.adjRsq > model().cross_or_fit().stats.adjRsq) \
                  || ((id == 'Rsq') && $parent.stats.Rsq > model().cross_or_fit().stats.Rsq) \
                  || ((id == 'BIC') && $parent.stats.BIC < model().cross_or_fit().stats.BIC) \
                  || ((id == 'AIC') && $parent.stats.AIC < model().cross_or_fit().stats.AIC) \
                  || ((id == 'RMSE') && $parent.stats.RMSE < model().cross_or_fit().stats.RMSE) \
                  || ((id == 'MaxAbsErr') && $parent.stats.MaxAbsErr < model().cross_or_fit().stats.MaxAbsErr) \
            }")
            span.value(data-bind="num:$parent.stats[id], fmt: format")
          // /ko
          // /ko
        // /ko
